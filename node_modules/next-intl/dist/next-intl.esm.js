import { useRouter } from 'next/router';
import React from 'react';
import { IntlProvider } from 'use-intl';
export * from 'use-intl';

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function NextIntlProvider(_ref) {
  var _useRouter;

  var locale = _ref.locale,
      rest = _objectWithoutPropertiesLoose(_ref, ["locale"]);

  // The router can be undefined if used in a context outside
  // of Next.js (e.g. unit tests, Storybook, ...)
  var nextLocale = (_useRouter = useRouter()) == null ? void 0 : _useRouter.locale;

  if (!locale && nextLocale) {
    locale = nextLocale;
  }

  if (!locale) {
    throw new Error(process.env.NODE_ENV !== "production" ? "Couldn't determine locale. Please make sure you use internationalized routing or alternatively pass an explicit locale to `NextIntlProvider`." : undefined);
  }

  return React.createElement(IntlProvider, Object.assign({
    locale: locale
  }, rest));
}

export { NextIntlProvider };
//# sourceMappingURL=next-intl.esm.js.map
